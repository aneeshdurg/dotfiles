alias 'pip'='sudo -H \pip'
alias 'speedtest'='wget --output-document=/dev/null --start-pos=499.9m http://speedtest.wdc01.softlayer.com/downloads/test500.zip'
alias 'rson'='redshift -O 3300' 
alias 'rsx'='redshift -x' 

dt=$(date)
ssid=$(iwgetid -r)
fileDt="asdf"
myDate=$(date)

if [ -f ~/.pkmn/today ]
then
  fileDt=$(date --reference=/home/$USER/.pkmn/today)
fi
if [ "${fileDt:0:10}" = "${myDate:0:10}" ]
then
  cp ~/.pkmn/today ~/.pkmn/temp.txt
  else
  pkmnname="pikachu"
  src="NO DATA"
  pkdex="NO DATA"
  speedtest 2> /tmp/speedtest123
  python ~/.pkmn/speedParse.py
  connected=$?
  if [ $connected -ne 0 ]
  then
    echo "too slow!"
    pkmn=$(shuf -i 1-6 -n1)
    echo $pkmn
    case $pkmn in
      1)
  	  cp ~/.pkmn/pika.txt ~/.pkmn/temp.txt
  	  pkmnname="pikachu";;
            #cat ~/.pkmn/pika.txt;;
      2)
  	  cp ~/.pkmn/bulbasaur.txt ~/.pkmn/temp.txt
  	  pkmnname="bulbasaur";;
  	  #cat ~/.pkmn/bulbasaur.txt;;
      3) 
  	  cp ~/.pkmn/charizard.txt ~/.pkmn/temp.txt
  	  pkmnname="charizard";;
  	  #cat ~/.pkmn/charizard.txt;;
      4)
  	  cp ~/.pkmn/squirtle.txt ~/.pkmn/temp.txt
  	  pkmnname="squirtle";;
  	  #cat ~/.pkmn/squirtle.txt;;
      5)
  	  cp ~/.pkmn/rayquaza.txt ~/.pkmn/temp.txt
  	  pkmnname="rayquaza";;
      6)
    	  cp ~/.pkmn/mudkip.txt ~/.pkmn/temp.txt
  	  pkmnname="mudkip";;
    esac
  else
    cp ~/.pkmn/pkmnJson .
    timeout 10 python ~/.pkmn/getPokedex3.py
    rm pkmnJson
    if [ $? -ne 0 ]
    then
      pkmn=$(shuf -i 1-6 -n1)
      case $pkmn in
        1)
  	    cp ~/.pkmn/pika.txt temp.txt
  	    pkmnname="pikachu";;
  	    #cat ~/.pkmn/pika.txt;;
        2)
  	    cp ~/.pkmn/bulbasaur.txt temp.txt
  	    pkmnname="bulbasaur";;
  	    #cat ~/.pkmn/bulbasaur.txt;;
        3) 
  	    cp ~/.pkmn/charizard.txt temp.txt
  	    pkmnname="charizard";;
  	    #cat ~/.pkmn/charizard.txt;;
        4)
  	    cp ~/.pkmn/squirtle.txt temp.txt
  	    pkmnname="squirtle";;
  	    #cat ~/.pkmn/squirtle.txt;;
        5)
  	    cp ~/.pkmn/rayquaza.txt temp.txt
  	    pkmnname="rayquaza";;
        6)
    	    cp ~/.pkmn/mudkip.txt temp.txt
  	    pkmnname="mudkip";;
      esac    
    else
      url=$(cat imgUrl.txt)
      rm imgUrl.txt	
      pkmnname=$(cat pkmnName.txt)
      rm pkmnName.txt
      timeout 30 wget $url -O ~/.pkmn/temp.jpg 
      if [ $? -ne 0 ]
      then
        pkmn=$(shuf -i 1-6 -n1)
        case $pkmn in
          1)
  	      cp ~/.pkmn/pika.txt temp.txt
  	      pkmnname="pikachu";;
  	      #cat ~/.pkmn/pika.txt;;
          2)
  	      cp ~/.pkmn/bulbasaur.txt temp.txt
  	      pkmnname="bulbasaur";;
  	      #cat ~/.pkmn/bulbasaur.txt;;
          3) 
    	      cp ~/.pkmn/charizard.txt temp.txt
  	      pkmnname="charizard";;
  	      #cat ~/.pkmn/charizard.txt;;
          4)
  	      cp ~/.pkmn/squirtle.txt temp.txt
  	      pkmnname="squirtle";;
  	      #cat ~/.pkmn/squirtle.txt;;
          5)
  	      cp ~/.pkmn/rayquaza.txt temp.txt
  	      pkmnname="rayquaza";;
          6)
    	      cp ~/.pkmn/mudkip.txt temp.txt
  	      pkmnname="mudkip";;
        esac    
      else
        pkdex=$(cat pkdex.txt)
        src=$(cat pkdesource.txt)
        rm pkdex.txt
        rm pkdesource.txt
        img2txt -g 0.5 -d none ~/.pkmn/temp.jpg > ~/.pkmn/temp.txt
        rm ~/.pkmn/temp.jpg
      fi
    fi
  fi

pkdex1=${pkdex:0:50}
pkdex2=${pkdex:50:50}
pkdex3=${pkdex:100:50}
pkdex4=${pkdex:150}
sed -i "1 s/\r/ =================================================================/" ~/.pkmn/temp.txt
sed -i "2 s/\r/ + Sometimes it's necessary to go a long distance out of the way +/" ~/.pkmn/temp.txt
sed -i "3 s/\r/ + in order to come back a short distance correctly.             +/" ~/.pkmn/temp.txt
sed -i "4 s/\r/ +                                      -Edward Albee(Zoo Story) +/" ~/.pkmn/temp.txt
sed -i "5 s/\r/ =================================================================/" ~/.pkmn/temp.txt
sed -i "16 s/\r/ Pokémon of the day: $pkmnname/" ~/.pkmn/temp.txt
sed -i "18 s/\r/ Pokédex Entry:/" ~/.pkmn/temp.txt
sed -i "19 s/\r/   Source: $src/" ~/.pkmn/temp.txt
sed -i "20 s/\r/   Info: $pkdex1/" ~/.pkmn/temp.txt
sed -i "21 s/\r/   $pkdex2/" ~/.pkmn/temp.txt
sed -i "22 s/\r/   $pkdex3/" ~/.pkmn/temp.txt
sed -i "23 s/\r/   $pkdex4/" ~/.pkmn/temp.txt
cp ~/.pkmn/temp.txt ~/.pkmn/today
fi
sed -i "6 s/\r/ Welcome back, $USER!/" ~/.pkmn/temp.txt
sed -i "7 s/\r/ It is now $dt/" ~/.pkmn/temp.txt
sed -i "8 s/\r/ Connected to network: [$ssid]/" ~/.pkmn/temp.txt
sed -i "10 s/\r/ BatteryInfo{/" ~/.pkmn/temp.txt
sed -i "11 s/\r/ $(upower -i $(upower -e | grep 'BAT') | grep -E 'state')/" ~/.pkmn/temp.txt
sed -i "12 s/\r/ $(upower -i $(upower -e | grep 'BAT') | grep -E 'time\ to\ empty|time\ to\ full')/" ~/.pkmn/temp.txt
sed -i "13 s/\r/ $(upower -i $(upower -e | grep 'BAT') | grep -E 'percentage')/" ~/.pkmn/temp.txt
sed -i "14 s/\r/ }/" ~/.pkmn/temp.txt
cat ~/.pkmn/temp.txt
rm ~/.pkmn/temp.txt
# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi
source /opt/ros/kinetic/setup.bash
source /opt/ros/kinetic/setup.bash
source ~/rosbuild_ws/setup.bash
export LD_LIBRARY_PATH=/usr/local/cuda-6.5/lib64:$LD_LIBRARY_PATH
export PATH=/usr/local/cuda-6.5/bin:$PATH
